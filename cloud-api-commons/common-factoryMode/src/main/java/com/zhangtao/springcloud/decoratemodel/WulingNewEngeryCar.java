package com.zhangtao.springcloud.decoratemodel;

/**
 * 1. @ClassDescription:  装饰器模式： 是一种对象结构型模式 ，它通过一种无须定义子类的方式来给对象动态增加职责/功能，
 *          使用对象之间的关联关系取代类之间的继承关系。
 *应用场景如下：
 *举例说明：例如五菱汽车，五菱汽车首先能跑，这种特性是属于不变的特性。
 *        而其他的型号则是不同的，例如续航不同、是否敞篷、是否有智能语音等等。
 *        针对不变的特性可以定义为接口，针对变化的特性可以定义装饰器，装饰器就是在原有的基础上增加了一些修饰。
 * 代码结构如下：
 * 定义五菱汽车抽象类，通用方法
 * 定义敞篷版、gameboy版本继承至五菱汽车抽象类，重写通用方法。
 * 定义五菱的装饰器类，继承至五菱汽车抽象类，传入五菱汽车抽象类型的对象，调用五菱汽车抽象类型的通用方法。
 * 分别定义五菱汽车的敞篷装饰器和续航增强装饰器，继承至五菱汽车的装饰器类，重写通用方法，增加装饰器功能。
 * 通过测试类调用，new 五菱敞篷对象，传入敞篷装饰器，调用装饰器的run方法。
 * 2. @author: ZhangTao
 * 3. @date: 2023年03月15日 19:37
 */
public abstract class WulingNewEngeryCar {
    /**定义五菱新能源汽车的抽象类，定义run方法：**/
    abstract void run();

}